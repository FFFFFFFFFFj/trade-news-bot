package bot

import (
	"fmt"
	"log"
	"strings"

	"github.com/FFFFFFFFFFj/trade-news-bot/storage"
)

var AdminIDs = map[int64]bool{
	839986298: true,
}

func (b *Bot) IsAdmin(userID int64) bool {
	return AdminIDs[userID]
}

func (b *Bot) HandleMessage(m *Message) {
	txt := strings.TrimSpace(m.Text)

	// 1) –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –æ–∂–∏–¥–∞–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (pending) –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ ‚Äî –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞–∫ URL
	if action, ok := b.getPending(m.Chat.ID); ok && !strings.HasPrefix(txt, "/") {
		switch action {
		case "addsource":
			// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)
			if !b.IsAdmin(m.Chat.ID) {
				b.SendMessage(m.Chat.ID, "üö´ –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
				b.clearPending(m.Chat.ID)
				return
			}
			err := storage.AddSource(b.db, txt, m.Chat.ID)
			if err != nil {
				b.SendMessage(m.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞.")
				log.Printf("AddSource error: %v", err)
			} else {
				b.SendMessage(m.Chat.ID, "–ò—Å—Ç–æ—á–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.")
			}
			b.clearPending(m.Chat.ID)
			return

		case "removesource":
			// –£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)
			if !b.IsAdmin(m.Chat.ID) {
				b.SendMessage(m.Chat.ID, "üö´ –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
				b.clearPending(m.Chat.ID)
				return
			}
			err := storage.RemoveSource(b.db, txt)
			if err != nil {
				b.SendMessage(m.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞.")
				log.Printf("RemoveSource error: %v", err)
			} else {
				b.SendMessage(m.Chat.ID, "–ò—Å—Ç–æ—á–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.")
			}
			b.clearPending(m.Chat.ID)
			return
		default:
			// –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ‚Äî —Å–±—Ä–æ—Å
			b.clearPending(m.Chat.ID)
		}
	}

	// 2) –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
	switch {
	case txt == "/start":
		// –ü—Ä–æ—Ñ–∏–ª—å ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–ª–∏ –∞–¥–º–∏–Ω—Å–∫–∏–π
		subsCount, err := storage.GetUserSubscriptionCount(b.db, m.Chat.ID)
		if err != nil {
			log.Printf("GetUserSubscriptionCount error for %d: %v", m.Chat.ID, err)
			subsCount = 0
		}
		if b.IsAdmin(m.Chat.ID) {
			activeUsers, err := storage.GetActiveUsersCount(b.db)
			if err != nil {
				log.Printf("GetActiveUsersCount error: %v", err)
				activeUsers = 0
			}
			msg := fmt.Sprintf("üëë –ê–¥–º–∏–Ω –ø—Ä–æ—Ñ–∏–ª—å\nüÜî Telegram ID: %d\nüìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: %d\n\n–ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã:\n/addsource - –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫\n/removesource - —É–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫\n/listsources - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏\n\n–ü—É–±–ª–∏—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/mysources - –º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏\n/subscribe <URL> - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è\n/unsubscribe <URL> - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è\n/latest - –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏\n/help - —Å–ø—Ä–∞–≤–∫–∞", m.Chat.ID, activeUsers)
			b.SendMessage(m.Chat.ID, msg)
		} else {
			msg := fmt.Sprintf("üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å\nüÜî Telegram ID: %d\nüìå –ü–æ–¥–ø–∏—Å–æ–∫: %d\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/mysources - –º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏\n/subscribe <URL> - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è\n/unsubscribe <URL> - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è\n/latest - –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏\n/help - —Å–ø—Ä–∞–≤–∫–∞", m.Chat.ID, subsCount)
			b.SendMessage(m.Chat.ID, msg)
		}
		return

	case txt == "/help":
		helpText := "/start - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å\n" +
			"/latest - –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏\n" +
			"/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n" +
			"/subscribe <URL> - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫\n" +
			"/unsubscribe <URL> - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞\n" +
			"/mysources - –ø–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏\n"
		if b.IsAdmin(m.Chat.ID) {
			helpText += "\n(–ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã)\n" +
				"/addsource - –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ (–≤ –¥–≤–∞ —à–∞–≥–∞)\n" +
				"/removesource - —É–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ (–≤ –¥–≤–∞ —à–∞–≥–∞)\n" +
				"/listsources - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏\n"
		}
		b.SendMessage(m.Chat.ID, helpText)

	case txt == "/latest":
		limit := 5
		items, err := storage.GetUnreadNews(b.db, m.Chat.ID, limit)
		if err != nil {
			b.SendMessage(m.Chat.ID, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.")
			log.Printf("GetUnreadNews error: %v", err)
			return
		}
		if len(items) == 0 {
			b.SendMessage(m.Chat.ID, "üö´ –°–µ–π—á–∞—Å –Ω–µ—Ç –Ω–æ–≤—ã—Ö –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –≤–∞—Å.")
			return
		}
		for _, item := range items {
			msg := fmt.Sprintf("üìå %s\nüïí %s\nüîó %s\n\n", item.Title, item.PubDate, item.Link)
			err = b.SendMessage(m.Chat.ID, msg)
			if err != nil {
				log.Printf("SendMessage error: %v", err)
				continue
			}
			err = storage.MarkNewsAsRead(b.db, m.Chat.ID, item.Link)
			if err != nil {
				log.Printf("MarkNewsAsRead error: %v", err)
			}
		}

	case strings.HasPrefix(txt, "/addsource"):
		// –î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ ‚Äî –¥–µ–ª–∞–µ–º –¥–≤—É—Ö—à–∞–≥–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ: —Å–Ω–∞—á–∞–ª–∞ –∫–æ–º–∞–Ω–¥–∞, –±–æ—Ç —Å–∫–∞–∂–µ—Ç –ø—Ä–∏—Å–ª–∞—Ç—å —Å—Å—ã–ª–∫—É
		if !b.IsAdmin(m.Chat.ID) {
			b.SendMessage(m.Chat.ID, "üö´ –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
			return
		}
		b.setPending(m.Chat.ID, "addsource")
		b.SendMessage(m.Chat.ID, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ RSS-–∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è. –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel")

	case strings.HasPrefix(txt, "/removesource"):
		if !b.IsAdmin(m.Chat.ID) {
			b.SendMessage(m.Chat.ID, "üö´ –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
			return
		}
		b.setPending(m.Chat.ID, "removesource")
		b.SendMessage(m.Chat.ID, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ RSS-–∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è. –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel")

	case txt == "/listsources":
		if !b.IsAdmin(m.Chat.ID) {
			b.SendMessage(m.Chat.ID, "üö´ –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
			return
		}
		sources, err := storage.GetAllSources(b.db)
		if err != nil {
			b.SendMessage(m.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.")
			log.Printf("GetAllSources error: %v", err)
			return
		}
		if len(sources) == 0 {
			b.SendMessage(m.Chat.ID, "–°–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø—É—Å—Ç.")
			return
		}
		b.SendMessage(m.Chat.ID, "–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:\n"+strings.Join(sources, "\n"))

	case strings.HasPrefix(txt, "/subscribe"):
		parts := strings.Fields(txt)
		if len(parts) < 2 {
			b.SendMessage(m.Chat.ID, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /subscribe <URL>")
			return
		}
		url := parts[1]
		err := storage.Subscribe(b.db, m.Chat.ID, url)
		if err != nil {
			b.SendMessage(m.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ: –∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞.")
			log.Printf("Subscribe error for %d: %v", m.Chat.ID, err)
			return
		}
		b.SendMessage(m.Chat.ID, "–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫.")

	case strings.HasPrefix(txt, "/unsubscribe"):
		parts := strings.Fields(txt)
		if len(parts) < 2 {
			b.SendMessage(m.Chat.ID, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /unsubscribe <URL>")
			return
		}
		url := parts[1]
		err := storage.Unsubscribe(b.db, m.Chat.ID, url)
		if err != nil {
			b.SendMessage(m.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø–∏—Å–∫–µ: –∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞.")
			log.Printf("Unsubscribe error for %d: %v", m.Chat.ID, err)
			return
		}
		b.SendMessage(m.Chat.ID, "–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞.")

	case txt == "/mysources":
		urls, err := storage.GetUserSources(b.db, m.Chat.ID)
		if err != nil {
			b.SendMessage(m.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫.")
			log.Printf("GetUserSources error for %d: %v", m.Chat.ID, err)
			return
		}
		if len(urls) == 0 {
			b.SendMessage(m.Chat.ID, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫.")
			return
		}
		b.SendMessage(m.Chat.ID, "–í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏:\n"+strings.Join(urls, "\n"))

	case txt == "/cancel":
		if _, ok := b.getPending(m.Chat.ID); ok {
			b.clearPending(m.Chat.ID)
			b.SendMessage(m.Chat.ID, "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
		} else {
			b.SendMessage(m.Chat.ID, "–ù–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å.")
		}

	default:
		log.Printf("Got message: %s", txt)
	}
}
