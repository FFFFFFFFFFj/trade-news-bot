package bot

import (
	"fmt"
	"log"
	"strings"

	"github.com/FFFFFFFFFFj/trade-news-bot/storage"
	tb "gopkg.in/telebot.v3"
)

func (b *Bot) HandleMessage(m *tb.Message) {
	_, _ = b.db.Exec(`INSERT INTO users (id) VALUES ($1) ON CONFLICT DO NOTHING`, m.Chat.ID)
	txt := strings.TrimSpace(m.Text)
	userID := m.Chat.ID

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–∞ –≤–≤–æ–¥–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥
	if mode, ok := b.pending[userID]; ok && b.IsAdmin(userID) {
		switch mode {
		case "addsource":
			if txt == "" {
				b.SendMessage(userID, "‚ö†Ô∏è URL –ø—É—Å—Ç–æ–π")
			} else if err := storage.AddSource(b.db, txt); err != nil {
				b.SendMessage(userID, "‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞")
			} else {
				b.SendMessage(userID, "‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω: "+txt)
			}
			b.pending[userID] = ""
			return

		case "removesource":
			if txt == "" {
				b.SendMessage(userID, "‚ö†Ô∏è URL –ø—É—Å—Ç–æ–π")
			} else if err := storage.RemoveSource(b.db, txt); err != nil {
				b.SendMessage(userID, "‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞")
			} else {
				b.SendMessage(userID, "‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ —É–¥–∞–ª—ë–Ω: "+txt)
			}
			b.pending[userID] = ""
			return

		case "broadcast":
			if txt == "" {
				b.SendMessage(userID, "‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ")
			} else {
				b.AdminBroadcast(txt)
			}
			b.pending[userID] = ""
			return

		case "setchannel":
			if txt == "" {
				b.SendMessage(userID, "‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –ø—É—Å—Ç–∞—è")
			} else {
				_ = storage.SetSetting(b.db, "channel", txt)
				b.SendMessage(userID, "‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
			}
			b.pending[userID] = ""
			return

		case "setmanual":
			if txt == "" {
				b.SendMessage(userID, "‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –ø—É—Å—Ç–∞—è")
			} else {
				_ = storage.SetSetting(b.db, "manual", txt)
				b.SendMessage(userID, "‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
			}
			b.pending[userID] = ""
			return
		}
	}

	switch {
	case txt == "/start":
		if b.IsAdmin(userID) {
			usersCount, _ := storage.GetUsersCount(b.db)
			activeUsers, _ := storage.GetActiveUsersCount(b.db)
			autopostUsers, _ := storage.GetAutopostUsersCount(b.db)
			msg := fmt.Sprintf("üëë –ê–¥–º–∏–Ω\nID: %d\n–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: %d\n–ü–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö: %d\n–° –∞–≤—Ç–æ–ø–æ—Å—Ç–æ–º: %d\n–í—Å–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: %d",
				userID, usersCount, activeUsers, autopostUsers, len(storage.MustGetAllSources(b.db)))
			b.SendMessage(userID, msg)
		} else {
			subsCount, _ := storage.GetUserSubscriptionCount(b.db, userID)
			msg := fmt.Sprintf("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\nID: %d\n–ü–æ–¥–ø–∏—Å–æ–∫: %d", userID, subsCount)
			b.SendMessage(userID, msg)
		}

	case txt == "/help":
		if b.IsAdmin(userID) {
			b.SendMessage(userID, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"+
				"/start ‚Äì –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"+
				"/help ‚Äì —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"+
				"/latest ‚Äì –Ω–æ–≤–æ—Å—Ç–∏\n"+
				"/mysources ‚Äì –ø–æ–¥–ø–∏—Å–∫–∏\n"+
				"/autopost ‚Äì –∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞\n\n"+
				"üëë –ê–¥–º–∏–Ω—Å–∫–∏–µ:\n"+
				"/addsource ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫\n"+
				"/removesource ‚Äì —É–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫\n"+
				"/listsources ‚Äì —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤\n"+
				"/broadcast ‚Äì —Ä–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º\n"+
				"/setchannel <url> ‚Äì –∑–∞–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª\n"+
				"/setmanual <url> ‚Äì –∑–∞–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é\n"+
				"/getsettings ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
		} else {
			b.SendMessage(userID, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"+
				"/start ‚Äì –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"+
				"/help ‚Äì —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"+
				"/latest ‚Äì –Ω–æ–≤–æ—Å—Ç–∏\n"+
				"/mysources ‚Äì –ø–æ–¥–ø–∏—Å–∫–∏\n"+
				"/autopost ‚Äì –∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞")
		}

	case strings.HasPrefix(txt, "/autopost "):
		parts := strings.Fields(txt)[1:]
		var validTimes []string
		for _, p := range parts {
			if len(p) == 5 && p[2] == ':' {
				validTimes = append(validTimes, p)
			}
		}
		if len(validTimes) > 6 {
			b.SendMessage(userID, "‚ö†Ô∏è –ú–∞–∫—Å–∏–º—É–º 6 –≤—Ä–µ–º—ë–Ω")
		} else if len(validTimes) == 0 {
			b.SendMessage(userID, "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏")
		} else {
			_ = storage.SetUserAutopost(b.db, userID, validTimes)
			b.SendMessage(userID, "‚úÖ –í—Ä–µ–º—è –∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: "+strings.Join(validTimes, ", "))
		}

	case txt == "/autopost":
		b.ShowAutopostMenu(userID)

	case txt == "/latest":
		// –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –ø–æ –ø–æ–¥–ø–∏—Å–∫–∞–º —é–∑–µ—Ä–∞
		_ = storage.FetchAndStoreNewsForUser(b.db, userID)
		b.latestPage[userID] = 1
		b.ShowLatestNews(userID, nil)

	case txt == "/mysources":
		b.ShowSourcesMenu(userID)

	case txt == "/addsource" && b.IsAdmin(userID):
		b.SendMessage(userID, "–í–≤–µ–¥–∏—Ç–µ URL –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")
		b.pending[userID] = "addsource"

	case txt == "/removesource" && b.IsAdmin(userID):
		b.SendMessage(userID, "–í–≤–µ–¥–∏—Ç–µ URL –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
		b.pending[userID] = "removesource"

	case txt == "/listsources" && b.IsAdmin(userID):
		sources := storage.MustGetAllSources(b.db)
		if len(sources) == 0 {
			b.SendMessage(userID, "‚ö†Ô∏è –í –±–∞–∑–µ –Ω–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
		} else {
			out := "üìë –ò—Å—Ç–æ—á–Ω–∏–∫–∏:\n"
			for i, s := range sources {
				out += fmt.Sprintf("%d. %s\n", i+1, s)
			}
			b.SendMessage(userID, out)
		}

	case txt == "/broadcast" && b.IsAdmin(userID):
		b.SendMessage(userID, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:")
		b.pending[userID] = "broadcast"

	// üîπ –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è settings
	case strings.HasPrefix(txt, "/setchannel ") && b.IsAdmin(userID):
		url := strings.TrimSpace(strings.TrimPrefix(txt, "/setchannel "))
		if url == "" {
			b.SendMessage(userID, "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª")
		} else {
			_ = storage.SetSetting(b.db, "channel", url)
			b.SendMessage(userID, "‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
		}

	case strings.HasPrefix(txt, "/setmanual ") && b.IsAdmin(userID):
		url := strings.TrimSpace(strings.TrimPrefix(txt, "/setmanual "))
		if url == "" {
			b.SendMessage(userID, "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é")
		} else {
			_ = storage.SetSetting(b.db, "manual", url)
			b.SendMessage(userID, "‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
		}

	case txt == "/getsettings" && b.IsAdmin(userID):
		settings, _ := storage.GetAllSettings(b.db)
		if len(settings) == 0 {
			b.SendMessage(userID, "‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ –ø—É—Å—Ç—ã–µ")
		} else {
			out := "‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
			for k, v := range settings {
				out += fmt.Sprintf("%s = %s\n", k, v)
			}
			b.SendMessage(userID, out)
		}

	default:
		log.Printf("–°–æ–æ–±—â–µ–Ω–∏–µ: %s", txt)
	}
}
