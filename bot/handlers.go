package bot

import (
	"fmt"
	"log"
	"strings"

	"github.com/FFFFFFFFFFj/trade-news-bot/rss"
	"github.com/FFFFFFFFFFj/trade-news-bot/storage"
)

func (b *Bot) HandleMessage(m *Message) {
	txt := strings.TrimSpace(m.Text)
	switch txt {
	case "/start":
		b.SendMessage(m.Chat.ID, "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø ‚Äî –≤–∞—à –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ üìàüì∞.\n\n" +
					  "‚ö° –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É\n" +
					  "üëâ /help\n\n" +
					  "–î–µ—Ä–∂–∏—Ç–µ —Ä—É–∫—É –Ω–∞ –ø—É–ª—å—Å–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –º–∏—Ä–∞ –≤–º–µ—Å—Ç–µ —Å–æ –º–Ω–æ–π! üöÄüí∞")
	
	case "/help":
		helpText := "/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n" +
					"/latest - –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏\n" +
					"/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
		b.SendMessage(m.Chat.ID, helpText) 
		
	case "/latest":
		sources := []string{
			"https://www.finmarket.ru/rss/main.asp",
    		"https://www.finmarket.ru/rss/ecworld.asp",
    		"https://www.finmarket.ru/rss/finances.asp",
    		"https://www.bfm.ru/rss/news.xml",
    		"https://rssexport.rbc.ru/rbcnews/economics/full.rss",
    		"https://rssexport.rbc.ru/rbcnews/finance/full.rss",
    		"https://rssexport.rbc.ru/rbcnews/business/full.rss",
    		"https://www.interfax.ru/rss.asp",
    		"https://tass.ru/rss/v2/economy.xml",
    		"https://ru.investing.com/rss/news.rss",
    		"https://ru.investing.com/rss/forex.rss",
    		"https://ru.investing.com/rss/cryptocurrency.rss",
		}

		
		items, err := rss.FetchAll(sources)
		if err != nil {
			b.SendMessage(m.Chat.ID, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π!" +
						 "–í–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤. üõë" +
						 "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π" +
						 "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. üôè")
			return
		}

		//save news in base
		for _, item := range items {
			err := storage.SaveNews(db, item, sourceURL)
			if err != nil {
				log.Printf("SaveNews error: %v", err)
			}
		}

		limit := 5
		if len(items) < limit {
			limit = len(items)
		}

		var sb strings.Builder
		count := 0
		for i := 0; i < limit; i++ {
			if b.Sent[items[i].Link] {
				continue // already sent
			}
			sb.WriteString(fmt.Sprintf("üìå %s\nüïí %s\nüîó %s\n\n", 
				items[i].Title, 
				items[i].PubDate,
				items[i].Link,))
			b.Sent[items[i].Link] = true // mark as sent
			count++
		}

		if sb.Len() == 0 {
			b.SendMessage(m.Chat.ID, "üö´ –£–ø—Å! –ü–æ–∫–∞ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–∞—Ö –Ω–µ—Ç —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π üìâüï∞Ô∏è.\n\n" +
						 "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É üëâ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞.\n\n" +
						 "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Å—Ç–∞–µ—Ç–µ—Å—å —Å –Ω–∞–º–∏! üíº‚ú®")
			return
		}

		b.SendMessage(m.Chat.ID, sb.String())

		
	default:
		log.Printf("Got message: %s", txt)
	}
}
