package bot

import (
	"fmt"

	"github.com/FFFFFFFFFFj/trade-news-bot/storage"
	tb "gopkg.in/telebot.v3"
)

func (b *Bot) ShowLatestNews(chatID int64, c tb.Context) {
	page := b.latestPage[chatID]
	if page < 1 {
		page = 1
	}
	pageSize := 4

	// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ storage
	news, _ := storage.GetLatestNewsPageForUser(b.db, chatID, page, pageSize)
	if len(news) == 0 {
		b.SendMessage(chatID, "–°–µ–≥–æ–¥–Ω—è –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç.")
		return
	}

	text := "üì∞ –ù–æ–≤–æ—Å—Ç–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n"
	for _, n := range news {
		text += fmt.Sprintf("‚Ä¢ <b>%s</b>\n%s\n\n", n.Title, n.Link)
	}

	// —Å—á–∏—Ç–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
	totalCount, _ := storage.GetTodayNewsCountForUser(b.db, chatID)
	totalPages := (totalCount + pageSize - 1) / pageSize
	if totalPages < 1 {
		totalPages = 1
	}

	// –¥–æ–±–∞–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫
	text += fmt.Sprintf("üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ %d/%d", page, totalPages)

	btns := [][]tb.InlineButton{}
	row := []tb.InlineButton{}
	if page > 1 {
		row = append(row, b.btnFirst, b.btnPrev)
	}
	if page < totalPages {
		row = append(row, b.btnNext, b.btnLast)
	}
	if len(row) > 0 {
		btns = append(btns, row)
	}

	_, _ = b.bot.Send(
		tb.ChatID(chatID),
		text,
		&tb.SendOptions{ParseMode: tb.ModeHTML, ReplyMarkup: &tb.ReplyMarkup{InlineKeyboard: btns}},
	)
}
